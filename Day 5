#include <stdio.h>

int main() {
    int arr[] = {12, 11, 13, 5, 6, 7};
    int n = sizeof(arr) / sizeof(arr[0]);

    // Print the original array
    printf("Given array:\n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");

    // Implement merge sort directly in main
    int temp[n]; // Temporary array for merging
    for (int size = 1; size < n; size *= 2) { // Size of subarrays to merge
        for (int left = 0; left < n - 1; left += 2 * size) {
            // Find boundaries of subarrays to merge
            int mid = left + size - 1;
            int right = (left + 2 * size - 1 < n) ? left + 2 * size - 1 : n - 1;

            // Merge the subarrays
            int i = left, j = mid + 1, k = left;

            while (i <= mid && j <= right) {
                if (arr[i] <= arr[j])
                    temp[k++] = arr[i++];
                else
                    temp[k++] = arr[j++];
            }

            while (i <= mid) // Copy remaining elements of left subarray
                temp[k++] = arr[i++];
            while (j <= right) // Copy remaining elements of right subarray
                temp[k++] = arr[j++];

            // Copy merged elements back to the original array
            for (i = left; i <= right; i++)
                arr[i] = temp[i];
        }
    }

    // Print the sorted array
    printf("\nSorted array:\n");
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");

    return 0;
}
